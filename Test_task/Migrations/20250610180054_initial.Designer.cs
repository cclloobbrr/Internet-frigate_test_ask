// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_task.Data;

#nullable disable

namespace Test_task.Migrations
{
    [DbContext(typeof(Test_taskDbContext))]
    [Migration("20250610180054_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test_task.Models.Entities.CheckEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateFinish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateOnly>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("PlannedDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SMPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupervisoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SMPId");

                    b.HasIndex("SupervisoryId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("Test_task.Models.Entities.SMPEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("SMP");
                });

            modelBuilder.Entity("Test_task.Models.Entities.SupervisoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Supervisory");
                });

            modelBuilder.Entity("Test_task.Models.Entities.CheckEntity", b =>
                {
                    b.HasOne("Test_task.Models.Entities.SMPEntity", "SMP")
                        .WithMany("Checks")
                        .HasForeignKey("SMPId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Test_task.Models.Entities.SupervisoryEntity", "Supervisory")
                        .WithMany("Checks")
                        .HasForeignKey("SupervisoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SMP");

                    b.Navigation("Supervisory");
                });

            modelBuilder.Entity("Test_task.Models.Entities.SMPEntity", b =>
                {
                    b.Navigation("Checks");
                });

            modelBuilder.Entity("Test_task.Models.Entities.SupervisoryEntity", b =>
                {
                    b.Navigation("Checks");
                });
#pragma warning restore 612, 618
        }
    }
}
